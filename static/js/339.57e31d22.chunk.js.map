{"version":3,"file":"static/js/339.57e31d22.chunk.js","mappings":"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","sources":["api/api.jsx","components/Layout/Styles.js","components/AboutMovie/AboutMovies.js","components/AboutMovie/AboutMovie.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'fb1cdfc404f005ecf4185cd092922724';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// приклад список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\nexport async function trendingmoviesRequest() {\n  try {\n    const response = await axios.get(`trending/movie/day?`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n// запит повної інформації про фільм для сторінки кінофільму.\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport async function movieInfoRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n// пошук фільму за ключовим словом на сторінці фільмів.\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport async function moviesQueryRequest(search) {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n        query: search,\n        include_adult: false,\n        page: 1,\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n//запит інформації про акторський склад для сторінки кінофільму.\n//https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport async function castRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\n//запит оглядів для сторінки кінофільму.\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\nexport async function reviewsRequest(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    // console.log('response in Api', response);\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n","import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 15px;\n`;\n\nexport const Header = styled.header`\n  padding: 15px 30px;\n  display: flex;\n  gap: 20px;\n  box-shadow: 0 0 10px 4px hsl(0deg 0% 38% / 75%); ;\n`;\n\nexport const NavItem = styled(NavLink)`\n  font-size: 700;\n  /* border: 1px solid black; */\n  display: flex;\n  font-size: 20px;\n  font-weight: 700;\n  text-decoration: none;\n  color: black;\n\n  &.active {\n    color: #ff4388;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    text-decoration: underline;\n  }\n`;\n\nexport const Form = styled.form`\n  /* padding: 25px 0 0 25px; */\n  display: flex;\n  gap: 15px;\n\n  > input {\n    width: 350px;\n    padding: 7px;\n  }\n`;\n\nexport const Box = styled.div`\n  border-bottom: 1px solid #727272;\n  padding: 15px;\n\n  p {\n    padding-left: 15px;\n  }\n`;\n\nexport const MoreInfoList = styled.ul`\n  text-decoration: none;\n  list-style: none;\n  margin-top: 15px;\n  padding-left: 20px;\n`;\n\nexport const MoreInfoLink = styled(NavLink)`\n  margin: 0;\n  padding: 5px;\n  display: block;\n\n  color: black;\n  text-decoration: none;\n  list-style: none;\n\n  &.active {\n    color: #ff4388;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    text-decoration: underline;\n  }\n`;\n\nexport const GoBack = styled(Link)`\n  /* border: 1px solid black; */\n  padding: 3px;\n\n  display: block;\n  width: 100px;\n  text-align: center;\n\n  svg {\n    width: 20px;\n    height: 15px;\n  }\n`;\n\nexport const MoviesList = styled.ul`\n  padding: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.section`\n  display: flex;\n  gap: 30px;\n  border-bottom: 1px solid #727272;\n  padding: 15px 0;\n\n  img {\n    width: 300px;\n    height: auto;\n  }\n\n  p {\n    padding-top: 8px;\n  }\n\n  h2 {\n    margin-top: 10px;\n  }\n\n  ul {\n    padding-left: 30px;\n    padding-top: 10px;\n  }\n`;","import { Container } from './AboutMovies';\nimport PropTypes from 'prop-types';\n\nexport const AboutMovie = ({ movieInfo }) => {\n  const {\n    title,\n    original_title,\n    release_date,\n    overview = 'There is no overview',\n    popularity,\n    genres = [],\n    poster_path,\n    status,\n  } = movieInfo;\n\n  const data = new Date(release_date).getFullYear();\n\n  return (\n    <Container>\n      {poster_path ? (\n        <img\n          src={'https://image.tmdb.org/t/p/w500' + poster_path}\n          alt=\"poster\"\n        ></img>\n      ) : (\n        <div>No image</div>\n      )}\n      <div>\n        <h1>\n          {title}/{original_title}\n        </h1>\n        <p>\n          <b>Release date:</b> {data}\n        </p>\n        <p>\n          <b>User Scote: </b>\n                  {popularity.toFixed(0)} %\n        </p>\n        <p>\n          <b>Status:</b> {status}\n        </p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        <ul>\n          {genres.map(genre => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </ul>\n      </div>\n    </Container>\n  );\n};\n\nAboutMovie.propTypes = {\n  movieInfo: PropTypes.shape({\n    title: PropTypes.string,\n    original_title: PropTypes.string,\n    release_date: PropTypes.string,\n    overview: PropTypes.string,\n    popularity: PropTypes.number,\n    genres: PropTypes.array,\n    poster_path: PropTypes.string,\n    status: PropTypes.string,\n  }).isRequired,\n};","import { Suspense, useState, useEffect, useRef } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { HiChevronLeft } from 'react-icons/hi';\n\nimport {\n  Container,\n  MoreInfoLink,\n  MoreInfoList,\n  Box,\n  GoBack,\n} from '../Layout/Styles';\nimport { movieInfoRequest } from '../../api/api';\nimport { AboutMovie } from '../AboutMovie/AboutMovie';\n// import { EventsLoader } from 'components/Loader';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState([]);\n    const { movieId } = useParams();\n      const location = useLocation();\n      const backLinkHref = useRef(location.state?.from);\n    const [isLoading, setIsLoading] = useState(true);\n    // const navigate = useNavigate();\n\n\n    // console.log(movieId);\n    \n    useEffect(() => {\n      if (!movieId) {\n        return;\n      }\n\n      (async function aboutMovie() {\n        const res = await movieInfoRequest(movieId);\n        if (res.data.length === 0) {\n          return;\n        }\n        setMovieInfo(res.data);\n        setIsLoading(false);\n      })();\n\n      return () => {\n        // second\n      };\n    }, [movieId]);\n\n   return (\n     <Container>\n       <GoBack to={backLinkHref.current ?? '/'}>\n         <HiChevronLeft />\n         Go back\n       </GoBack>\n\n       {/* <button onClick={() => navigate(-1)}>Go back</button> */}\n\n       {/* {isLoading && <EventsLoader />} */}\n       {!isLoading && <AboutMovie movieInfo={movieInfo} />}\n\n       <Box>\n         <p>Additional information</p>\n         <MoreInfoList>\n           <li>\n             <MoreInfoLink to={'cast'}>Cast</MoreInfoLink>\n           </li>\n           <li>\n             <MoreInfoLink to={'reviews'}>Reviews</MoreInfoLink>\n           </li>\n         </MoreInfoList>\n       </Box>\n\n       <Suspense fallback={<div>Loading...</div>}>\n         <Outlet />\n       </Suspense>\n     </Container>\n   );\n};\n\nexport default MovieDetails;"],"names":["KEY","trendingmoviesRequest","axios","params","api_key","response","console","log","movieInfoRequest","movieId","language","moviesQueryRequest","search","query","include_adult","page","castRequest","reviewsRequest","Container","styled","Form","NavLink","Box","MoreInfoList","MoreInfoLink","GoBack","Link","MoviesList","AboutMovie","movieInfo","title","original_title","release_date","overview","popularity","genres","poster_path","status","data","Date","getFullYear","src","alt","toFixed","map","genre","name","id","useState","setMovieInfo","useParams","location","useLocation","backLinkHref","useRef","state","from","isLoading","setIsLoading","useEffect","res","length","to","current","Suspense","fallback"],"sourceRoot":""}